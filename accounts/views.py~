#! /usr/bin/env python
#coding=utf-8
from django.http import HttpResponseRedirect, Http404, HttpResponse
from django.shortcuts import render_to_response
from django.views.decorators.csrf import csrf_protect
from accounts.forms import RegisterForm, LoginForm
from django.template import RequestContext
from django.contrib.auth.models import User
from django.contrib.auth import authenticate, login, logout
from cart.models import Cart
from cart.views import getCart, cartMerge, cleanCart


@csrf_protect
def loginview(request):
    if request.method == 'POST':
        form=LoginForm(request.POST)
        if form.is_valid():
            username=form.cleaned_data['username']
            password=form.cleaned_data['password']
            user = authenticate(username=username, password=password)
            try:
                next= request.get_full_path().split('=')[1]
            except:
                next='/'
            session_cart=getCart(request)
            if user is not None:
                if user.is_active:
                    login(request, user)
                    user_cart=getCart(request)
                    cartMerge(user_cart, session_cart)
                    request.session['cart']={}
                    return HttpResponseRedirect(next)
    else:
        if '_auth_user_id' in request.session:
            return HttpResponseRedirect('/')
        else:
            form=LoginForm()
    return render_to_response('login_form.html',
            {'form': form},
             context_instance=RequestContext(request))


def logoutview(request):
    try:
        cleanCart(request)
    except:
        raise Http404
    logout(request)
    return HttpResponseRedirect('/')


@csrf_protect
def register(request):
    if request.method =='POST':
        form=RegisterForm(request.POST)
        if form.is_valid():
            user=User.objects.create_user(
            username=form.cleaned_data['username'],
            password=form.cleaned_data['password'],
            email=form.cleaned_data['email'],
            )
            user_profile=user.get_profile()
            user_profile.nick_name=form.cleaned_data['nick_name']
            user_profile.save()
            Cart.objects.create(user=user)
            return HttpResponseRedirect('/accounts/register/success/')
    else:
        form=RegisterForm()
    return render_to_response('reg_form.html', {
    'form': form},
    context_instance=RequestContext(request),
    )
